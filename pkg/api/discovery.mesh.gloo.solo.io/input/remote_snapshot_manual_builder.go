// Code generated by skv2. DO NOT EDIT.

/*
	Utility for manually building input snapshots. Used primarily in tests.
*/
package input

import (
	appmesh_k8s_aws_v1beta2 "github.com/aws/aws-app-mesh-controller-for-k8s/apis/appmesh/v1beta2"
	appmesh_k8s_aws_v1beta2_sets "github.com/solo-io/external-apis/pkg/api/appmesh/appmesh.k8s.aws/v1beta2/sets"

	v1_sets "github.com/solo-io/external-apis/pkg/api/k8s/core/v1/sets"
	v1 "k8s.io/api/core/v1"

	apps_v1_sets "github.com/solo-io/external-apis/pkg/api/k8s/apps/v1/sets"
	apps_v1 "k8s.io/api/apps/v1"
)

type InputRemoteSnapshotManualBuilder struct {
	name string

	appmeshK8SAwsv1Beta2Meshes       appmesh_k8s_aws_v1beta2_sets.MeshSet
	appmeshK8SAwsv1Beta2VirtualNodes appmesh_k8s_aws_v1beta2_sets.VirtualNodeSet

	v1ConfigMaps v1_sets.ConfigMapSet
	v1Services   v1_sets.ServiceSet
	v1Pods       v1_sets.PodSet
	v1Nodes      v1_sets.NodeSet

	appsv1Deployments  apps_v1_sets.DeploymentSet
	appsv1ReplicaSets  apps_v1_sets.ReplicaSetSet
	appsv1DaemonSets   apps_v1_sets.DaemonSetSet
	appsv1StatefulSets apps_v1_sets.StatefulSetSet
}

func NewInputRemoteSnapshotManualBuilder(name string) *InputRemoteSnapshotManualBuilder {
	return &InputRemoteSnapshotManualBuilder{
		name: name,

		appmeshK8SAwsv1Beta2Meshes:       appmesh_k8s_aws_v1beta2_sets.NewMeshSet(),
		appmeshK8SAwsv1Beta2VirtualNodes: appmesh_k8s_aws_v1beta2_sets.NewVirtualNodeSet(),

		v1ConfigMaps: v1_sets.NewConfigMapSet(),
		v1Services:   v1_sets.NewServiceSet(),
		v1Pods:       v1_sets.NewPodSet(),
		v1Nodes:      v1_sets.NewNodeSet(),

		appsv1Deployments:  apps_v1_sets.NewDeploymentSet(),
		appsv1ReplicaSets:  apps_v1_sets.NewReplicaSetSet(),
		appsv1DaemonSets:   apps_v1_sets.NewDaemonSetSet(),
		appsv1StatefulSets: apps_v1_sets.NewStatefulSetSet(),
	}
}

func (i *InputRemoteSnapshotManualBuilder) Build() RemoteSnapshot {
	return NewRemoteSnapshot(
		i.name,

		i.appmeshK8SAwsv1Beta2Meshes,
		i.appmeshK8SAwsv1Beta2VirtualNodes,

		i.v1ConfigMaps,
		i.v1Services,
		i.v1Pods,
		i.v1Nodes,

		i.appsv1Deployments,
		i.appsv1ReplicaSets,
		i.appsv1DaemonSets,
		i.appsv1StatefulSets,
	)
}
func (i *InputRemoteSnapshotManualBuilder) AddAppmeshK8SAwsv1Beta2Meshes(appmeshK8SAwsv1Beta2Meshes []*appmesh_k8s_aws_v1beta2.Mesh) *InputRemoteSnapshotManualBuilder {
	i.appmeshK8SAwsv1Beta2Meshes.Insert(appmeshK8SAwsv1Beta2Meshes...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddAppmeshK8SAwsv1Beta2VirtualNodes(appmeshK8SAwsv1Beta2VirtualNodes []*appmesh_k8s_aws_v1beta2.VirtualNode) *InputRemoteSnapshotManualBuilder {
	i.appmeshK8SAwsv1Beta2VirtualNodes.Insert(appmeshK8SAwsv1Beta2VirtualNodes...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddV1ConfigMaps(v1ConfigMaps []*v1.ConfigMap) *InputRemoteSnapshotManualBuilder {
	i.v1ConfigMaps.Insert(v1ConfigMaps...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddV1Services(v1Services []*v1.Service) *InputRemoteSnapshotManualBuilder {
	i.v1Services.Insert(v1Services...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddV1Pods(v1Pods []*v1.Pod) *InputRemoteSnapshotManualBuilder {
	i.v1Pods.Insert(v1Pods...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddV1Nodes(v1Nodes []*v1.Node) *InputRemoteSnapshotManualBuilder {
	i.v1Nodes.Insert(v1Nodes...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddAppsv1Deployments(appsv1Deployments []*apps_v1.Deployment) *InputRemoteSnapshotManualBuilder {
	i.appsv1Deployments.Insert(appsv1Deployments...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddAppsv1ReplicaSets(appsv1ReplicaSets []*apps_v1.ReplicaSet) *InputRemoteSnapshotManualBuilder {
	i.appsv1ReplicaSets.Insert(appsv1ReplicaSets...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddAppsv1DaemonSets(appsv1DaemonSets []*apps_v1.DaemonSet) *InputRemoteSnapshotManualBuilder {
	i.appsv1DaemonSets.Insert(appsv1DaemonSets...)
	return i
}
func (i *InputRemoteSnapshotManualBuilder) AddAppsv1StatefulSets(appsv1StatefulSets []*apps_v1.StatefulSet) *InputRemoteSnapshotManualBuilder {
	i.appsv1StatefulSets.Insert(appsv1StatefulSets...)
	return i
}
