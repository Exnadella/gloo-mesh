// Code generated by skv2. DO NOT EDIT.

/*
	Utility for manually building input snapshots. Used primarily in tests.
*/
package input

import (
	appmesh_k8s_aws_v1beta2 "github.com/aws/aws-app-mesh-controller-for-k8s/apis/appmesh/v1beta2"
	appmesh_k8s_aws_v1beta2_sets "github.com/solo-io/external-apis/pkg/api/appmesh/appmesh.k8s.aws/v1beta2/sets"

	v1_sets "github.com/solo-io/external-apis/pkg/api/k8s/core/v1/sets"
	v1 "k8s.io/api/core/v1"

	apps_v1_sets "github.com/solo-io/external-apis/pkg/api/k8s/apps/v1/sets"
	apps_v1 "k8s.io/api/apps/v1"
)

type InputDiscoveryInputSnapshotManualBuilder struct {
	name string

	appmeshK8SAwsV1Beta2Meshes appmesh_k8s_aws_v1beta2_sets.MeshSet

	v1ConfigMaps v1_sets.ConfigMapSet
	v1Services   v1_sets.ServiceSet
	v1Pods       v1_sets.PodSet
	v1Endpoints  v1_sets.EndpointsSet
	v1Nodes      v1_sets.NodeSet

	appsV1Deployments  apps_v1_sets.DeploymentSet
	appsV1ReplicaSets  apps_v1_sets.ReplicaSetSet
	appsV1DaemonSets   apps_v1_sets.DaemonSetSet
	appsV1StatefulSets apps_v1_sets.StatefulSetSet
}

func NewInputDiscoveryInputSnapshotManualBuilder(name string) *InputDiscoveryInputSnapshotManualBuilder {
	return &InputDiscoveryInputSnapshotManualBuilder{
		name: name,

		appmeshK8SAwsV1Beta2Meshes: appmesh_k8s_aws_v1beta2_sets.NewMeshSet(),

		v1ConfigMaps: v1_sets.NewConfigMapSet(),
		v1Services:   v1_sets.NewServiceSet(),
		v1Pods:       v1_sets.NewPodSet(),
		v1Endpoints:  v1_sets.NewEndpointsSet(),
		v1Nodes:      v1_sets.NewNodeSet(),

		appsV1Deployments:  apps_v1_sets.NewDeploymentSet(),
		appsV1ReplicaSets:  apps_v1_sets.NewReplicaSetSet(),
		appsV1DaemonSets:   apps_v1_sets.NewDaemonSetSet(),
		appsV1StatefulSets: apps_v1_sets.NewStatefulSetSet(),
	}
}

func (i *InputDiscoveryInputSnapshotManualBuilder) Build() DiscoveryInputSnapshot {
	return NewDiscoveryInputSnapshot(
		i.name,

		i.appmeshK8SAwsV1Beta2Meshes,

		i.v1ConfigMaps,
		i.v1Services,
		i.v1Pods,
		i.v1Endpoints,
		i.v1Nodes,

		i.appsV1Deployments,
		i.appsV1ReplicaSets,
		i.appsV1DaemonSets,
		i.appsV1StatefulSets,
	)
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddAppmeshK8SAws_V1Beta2_Meshes(appmeshK8SAwsV1Beta2Meshes []*appmesh_k8s_aws_v1beta2.Mesh) *InputDiscoveryInputSnapshotManualBuilder {
	i.appmeshK8SAwsV1Beta2Meshes.Insert(appmeshK8SAwsV1Beta2Meshes...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddV1_ConfigMaps(v1ConfigMaps []*v1.ConfigMap) *InputDiscoveryInputSnapshotManualBuilder {
	i.v1ConfigMaps.Insert(v1ConfigMaps...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddV1_Services(v1Services []*v1.Service) *InputDiscoveryInputSnapshotManualBuilder {
	i.v1Services.Insert(v1Services...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddV1_Pods(v1Pods []*v1.Pod) *InputDiscoveryInputSnapshotManualBuilder {
	i.v1Pods.Insert(v1Pods...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddV1_Endpoints(v1Endpoints []*v1.Endpoints) *InputDiscoveryInputSnapshotManualBuilder {
	i.v1Endpoints.Insert(v1Endpoints...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddV1_Nodes(v1Nodes []*v1.Node) *InputDiscoveryInputSnapshotManualBuilder {
	i.v1Nodes.Insert(v1Nodes...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddApps_V1_Deployments(appsV1Deployments []*apps_v1.Deployment) *InputDiscoveryInputSnapshotManualBuilder {
	i.appsV1Deployments.Insert(appsV1Deployments...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddApps_V1_ReplicaSets(appsV1ReplicaSets []*apps_v1.ReplicaSet) *InputDiscoveryInputSnapshotManualBuilder {
	i.appsV1ReplicaSets.Insert(appsV1ReplicaSets...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddApps_V1_DaemonSets(appsV1DaemonSets []*apps_v1.DaemonSet) *InputDiscoveryInputSnapshotManualBuilder {
	i.appsV1DaemonSets.Insert(appsV1DaemonSets...)
	return i
}
func (i *InputDiscoveryInputSnapshotManualBuilder) AddApps_V1_StatefulSets(appsV1StatefulSets []*apps_v1.StatefulSet) *InputDiscoveryInputSnapshotManualBuilder {
	i.appsV1StatefulSets.Insert(appsV1StatefulSets...)
	return i
}
