// Code generated by skv2. DO NOT EDIT.

package v1alpha1

import (
	networking_enterprise_mesh_gloo_solo_io_v1alpha1 "github.com/solo-io/gloo-mesh/pkg/api/networking.enterprise.mesh.gloo.solo.io/v1alpha1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for WasmDeploymentClient from Clientset
func WasmDeploymentClientFromClientsetProvider(clients networking_enterprise_mesh_gloo_solo_io_v1alpha1.Clientset) networking_enterprise_mesh_gloo_solo_io_v1alpha1.WasmDeploymentClient {
	return clients.WasmDeployments()
}

// Provider for WasmDeployment Client from Client
func WasmDeploymentClientProvider(client client.Client) networking_enterprise_mesh_gloo_solo_io_v1alpha1.WasmDeploymentClient {
	return networking_enterprise_mesh_gloo_solo_io_v1alpha1.NewWasmDeploymentClient(client)
}

type WasmDeploymentClientFactory func(client client.Client) networking_enterprise_mesh_gloo_solo_io_v1alpha1.WasmDeploymentClient

func WasmDeploymentClientFactoryProvider() WasmDeploymentClientFactory {
	return WasmDeploymentClientProvider
}

type WasmDeploymentClientFromConfigFactory func(cfg *rest.Config) (networking_enterprise_mesh_gloo_solo_io_v1alpha1.WasmDeploymentClient, error)

func WasmDeploymentClientFromConfigFactoryProvider() WasmDeploymentClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_enterprise_mesh_gloo_solo_io_v1alpha1.WasmDeploymentClient, error) {
		clients, err := networking_enterprise_mesh_gloo_solo_io_v1alpha1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.WasmDeployments(), nil
	}
}

// Provider for GlobalServiceClient from Clientset
func GlobalServiceClientFromClientsetProvider(clients networking_enterprise_mesh_gloo_solo_io_v1alpha1.Clientset) networking_enterprise_mesh_gloo_solo_io_v1alpha1.GlobalServiceClient {
	return clients.GlobalServices()
}

// Provider for GlobalService Client from Client
func GlobalServiceClientProvider(client client.Client) networking_enterprise_mesh_gloo_solo_io_v1alpha1.GlobalServiceClient {
	return networking_enterprise_mesh_gloo_solo_io_v1alpha1.NewGlobalServiceClient(client)
}

type GlobalServiceClientFactory func(client client.Client) networking_enterprise_mesh_gloo_solo_io_v1alpha1.GlobalServiceClient

func GlobalServiceClientFactoryProvider() GlobalServiceClientFactory {
	return GlobalServiceClientProvider
}

type GlobalServiceClientFromConfigFactory func(cfg *rest.Config) (networking_enterprise_mesh_gloo_solo_io_v1alpha1.GlobalServiceClient, error)

func GlobalServiceClientFromConfigFactoryProvider() GlobalServiceClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_enterprise_mesh_gloo_solo_io_v1alpha1.GlobalServiceClient, error) {
		clients, err := networking_enterprise_mesh_gloo_solo_io_v1alpha1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.GlobalServices(), nil
	}
}
