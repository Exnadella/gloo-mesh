// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo-mesh/api/xds/v1alpha1/xds_config.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//XdsConfigs are used to issue XDS Configuration Resources to running Envoy instances.
//They are created by Gloo Mesh for processing by an agent running on managed clusters.
//
//The agent will serve the specified XDS configuration resources on its grpc-xds port (default 9977)
//to the Envoy instances (nodes) defined in the XDSConfigSpec.
//
//This feature is currently only available in Gloo Mesh Enterprise.
type XdsConfigSpec struct {
	//
	//The nodes (Envoy Node ID) that will receive this XDS Configuration.
	Nodes []string `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// The organization for this certificate.
	Org string `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
	// the xDS resources to serve to the nodes.
	// mapped by type URL.
	Types                []*XdsConfigSpec_TypedResources `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *XdsConfigSpec) Reset()         { *m = XdsConfigSpec{} }
func (m *XdsConfigSpec) String() string { return proto.CompactTextString(m) }
func (*XdsConfigSpec) ProtoMessage()    {}
func (*XdsConfigSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c0c31bcc3227304, []int{0}
}
func (m *XdsConfigSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XdsConfigSpec.Unmarshal(m, b)
}
func (m *XdsConfigSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XdsConfigSpec.Marshal(b, m, deterministic)
}
func (m *XdsConfigSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XdsConfigSpec.Merge(m, src)
}
func (m *XdsConfigSpec) XXX_Size() int {
	return xxx_messageInfo_XdsConfigSpec.Size(m)
}
func (m *XdsConfigSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_XdsConfigSpec.DiscardUnknown(m)
}

var xxx_messageInfo_XdsConfigSpec proto.InternalMessageInfo

func (m *XdsConfigSpec) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *XdsConfigSpec) GetOrg() string {
	if m != nil {
		return m.Org
	}
	return ""
}

func (m *XdsConfigSpec) GetTypes() []*XdsConfigSpec_TypedResources {
	if m != nil {
		return m.Types
	}
	return nil
}

// a set of resources of a single type (typeURL)
type XdsConfigSpec_TypedResources struct {
	// the type URL of the resources in the given set
	TypeUrl string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	// stored as compressed, base-64 encoded raw bytes.
	Resources            []*XdsConfigSpec_Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *XdsConfigSpec_TypedResources) Reset()         { *m = XdsConfigSpec_TypedResources{} }
func (m *XdsConfigSpec_TypedResources) String() string { return proto.CompactTextString(m) }
func (*XdsConfigSpec_TypedResources) ProtoMessage()    {}
func (*XdsConfigSpec_TypedResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c0c31bcc3227304, []int{0, 0}
}
func (m *XdsConfigSpec_TypedResources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XdsConfigSpec_TypedResources.Unmarshal(m, b)
}
func (m *XdsConfigSpec_TypedResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XdsConfigSpec_TypedResources.Marshal(b, m, deterministic)
}
func (m *XdsConfigSpec_TypedResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XdsConfigSpec_TypedResources.Merge(m, src)
}
func (m *XdsConfigSpec_TypedResources) XXX_Size() int {
	return xxx_messageInfo_XdsConfigSpec_TypedResources.Size(m)
}
func (m *XdsConfigSpec_TypedResources) XXX_DiscardUnknown() {
	xxx_messageInfo_XdsConfigSpec_TypedResources.DiscardUnknown(m)
}

var xxx_messageInfo_XdsConfigSpec_TypedResources proto.InternalMessageInfo

func (m *XdsConfigSpec_TypedResources) GetTypeUrl() string {
	if m != nil {
		return m.TypeUrl
	}
	return ""
}

func (m *XdsConfigSpec_TypedResources) GetResources() []*XdsConfigSpec_Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

// a single named resource
type XdsConfigSpec_Resource struct {
	// name of the resource, as referenced by xDS
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// stored as compressed, base-64 encoded raw bytes.
	CompressedData       []byte   `protobuf:"bytes,2,opt,name=compressed_data,json=compressedData,proto3" json:"compressed_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XdsConfigSpec_Resource) Reset()         { *m = XdsConfigSpec_Resource{} }
func (m *XdsConfigSpec_Resource) String() string { return proto.CompactTextString(m) }
func (*XdsConfigSpec_Resource) ProtoMessage()    {}
func (*XdsConfigSpec_Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c0c31bcc3227304, []int{0, 1}
}
func (m *XdsConfigSpec_Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XdsConfigSpec_Resource.Unmarshal(m, b)
}
func (m *XdsConfigSpec_Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XdsConfigSpec_Resource.Marshal(b, m, deterministic)
}
func (m *XdsConfigSpec_Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XdsConfigSpec_Resource.Merge(m, src)
}
func (m *XdsConfigSpec_Resource) XXX_Size() int {
	return xxx_messageInfo_XdsConfigSpec_Resource.Size(m)
}
func (m *XdsConfigSpec_Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_XdsConfigSpec_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_XdsConfigSpec_Resource proto.InternalMessageInfo

func (m *XdsConfigSpec_Resource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XdsConfigSpec_Resource) GetCompressedData() []byte {
	if m != nil {
		return m.CompressedData
	}
	return nil
}

// The XdsConfig status is written by the CertificateRequesting agent.
type XdsConfigStatus struct {
	// The most recent generation observed in the the XdsConfig metadata.
	// If the observedGeneration does not match generation, the XDS Agent has not processed the most
	// recent version of this XdsConfig.
	ObservedGeneration int64 `protobuf:"varint,1,opt,name=observed_generation,json=observedGeneration,proto3" json:"observed_generation,omitempty"`
	// Any error observed which prevented the CertificateRequest from being processed.
	// If the error is empty, the request has been processed successfully.
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XdsConfigStatus) Reset()         { *m = XdsConfigStatus{} }
func (m *XdsConfigStatus) String() string { return proto.CompactTextString(m) }
func (*XdsConfigStatus) ProtoMessage()    {}
func (*XdsConfigStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c0c31bcc3227304, []int{1}
}
func (m *XdsConfigStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XdsConfigStatus.Unmarshal(m, b)
}
func (m *XdsConfigStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XdsConfigStatus.Marshal(b, m, deterministic)
}
func (m *XdsConfigStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XdsConfigStatus.Merge(m, src)
}
func (m *XdsConfigStatus) XXX_Size() int {
	return xxx_messageInfo_XdsConfigStatus.Size(m)
}
func (m *XdsConfigStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_XdsConfigStatus.DiscardUnknown(m)
}

var xxx_messageInfo_XdsConfigStatus proto.InternalMessageInfo

func (m *XdsConfigStatus) GetObservedGeneration() int64 {
	if m != nil {
		return m.ObservedGeneration
	}
	return 0
}

func (m *XdsConfigStatus) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*XdsConfigSpec)(nil), "xds.enterprise.agent.mesh.gloo.solo.io.XdsConfigSpec")
	proto.RegisterType((*XdsConfigSpec_TypedResources)(nil), "xds.enterprise.agent.mesh.gloo.solo.io.XdsConfigSpec.TypedResources")
	proto.RegisterType((*XdsConfigSpec_Resource)(nil), "xds.enterprise.agent.mesh.gloo.solo.io.XdsConfigSpec.Resource")
	proto.RegisterType((*XdsConfigStatus)(nil), "xds.enterprise.agent.mesh.gloo.solo.io.XdsConfigStatus")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo-mesh/api/xds/v1alpha1/xds_config.proto", fileDescriptor_7c0c31bcc3227304)
}

var fileDescriptor_7c0c31bcc3227304 = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0xd5, 0x6e, 0x28, 0x74, 0x0d, 0xb4, 0xc8, 0x70, 0x08, 0x8b, 0x04, 0xab, 0x1e, 0x60, 0x2f,
	0xb5, 0xb5, 0xe5, 0xde, 0x03, 0x54, 0xea, 0x3d, 0x14, 0x54, 0x55, 0x48, 0x2b, 0x27, 0x9e, 0x7a,
	0xad, 0x26, 0x19, 0xcb, 0xe3, 0x44, 0xed, 0x27, 0xf0, 0xa7, 0x7c, 0x06, 0xb2, 0xb3, 0xe9, 0xaa,
	0x1c, 0x50, 0xc5, 0x29, 0x7e, 0x7e, 0x93, 0x37, 0xcf, 0x33, 0x8f, 0x9d, 0x1a, 0x1b, 0x36, 0x5d,
	0x29, 0x2a, 0x6c, 0x24, 0x61, 0x8d, 0xc7, 0x16, 0xa5, 0xa9, 0x11, 0x8f, 0x1b, 0xa0, 0x8d, 0x54,
	0xce, 0xca, 0x5b, 0x4d, 0xb2, 0x5f, 0xa9, 0xda, 0x6d, 0xd4, 0x2a, 0x82, 0x75, 0x85, 0xed, 0xb5,
	0x35, 0xc2, 0x79, 0x0c, 0xc8, 0x3f, 0xde, 0x6a, 0x12, 0xd0, 0x06, 0xf0, 0xce, 0x5b, 0x02, 0xa1,
	0x0c, 0xb4, 0x41, 0xc4, 0x9f, 0x45, 0x94, 0x11, 0x51, 0x53, 0x58, 0x9c, 0xbf, 0xa3, 0x9b, 0xfe,
	0x24, 0xe9, 0x55, 0xe8, 0x41, 0xf6, 0xab, 0xf4, 0x1d, 0x44, 0xe6, 0x1f, 0x0c, 0xa2, 0xa9, 0x41,
	0x26, 0x54, 0x76, 0xd7, 0x32, 0xd8, 0x06, 0x28, 0xa8, 0xc6, 0x6d, 0x0b, 0xde, 0xff, 0x5d, 0xa0,
	0x3b, 0xaf, 0x82, 0xc5, 0x76, 0xe0, 0x8f, 0x7e, 0x4f, 0xd9, 0xcb, 0x4b, 0x4d, 0x5f, 0x93, 0xb3,
	0x6f, 0x0e, 0x2a, 0xfe, 0x86, 0xed, 0xb5, 0xa8, 0x81, 0xf2, 0xc9, 0x22, 0x5b, 0xce, 0x8a, 0x01,
	0xf0, 0x57, 0x2c, 0x43, 0x6f, 0xf2, 0xe9, 0x62, 0xb2, 0x9c, 0x15, 0xf1, 0xc8, 0xaf, 0xd8, 0x5e,
	0xb8, 0x73, 0x40, 0x79, 0xb6, 0xc8, 0x96, 0xcf, 0x4f, 0xce, 0xc4, 0xe3, 0xde, 0x23, 0x1e, 0x74,
	0x13, 0x17, 0x77, 0x0e, 0x74, 0x01, 0x84, 0x9d, 0xaf, 0x80, 0x8a, 0x41, 0x72, 0xfe, 0x6b, 0xc2,
	0x0e, 0x1e, 0x32, 0xfc, 0x2d, 0xdb, 0x8f, 0xdc, 0xba, 0xf3, 0x75, 0x3e, 0x49, 0x2e, 0x9e, 0x45,
	0xfc, 0xdd, 0xd7, 0xfc, 0x27, 0x9b, 0xf9, 0xb1, 0x2e, 0x9f, 0x26, 0x37, 0xa7, 0xff, 0xe7, 0x66,
	0x6c, 0x57, 0xec, 0x04, 0xe7, 0xe7, 0x6c, 0x7f, 0xbc, 0xe6, 0x9c, 0x3d, 0x69, 0x55, 0x03, 0x5b,
	0x03, 0xe9, 0xcc, 0x3f, 0xb1, 0xc3, 0x0a, 0x1b, 0xe7, 0x81, 0x08, 0xf4, 0x5a, 0xab, 0xa0, 0xd2,
	0x94, 0x5e, 0x14, 0x07, 0xbb, 0xeb, 0x33, 0x15, 0xd4, 0xd1, 0x25, 0x3b, 0xdc, 0x75, 0x0b, 0x2a,
	0x74, 0xc4, 0x25, 0x7b, 0x8d, 0x25, 0x81, 0xef, 0x41, 0xaf, 0x0d, 0xb4, 0x30, 0xac, 0x26, 0xc9,
	0x67, 0x05, 0x1f, 0xa9, 0xf3, 0x7b, 0x26, 0x2e, 0x07, 0xbc, 0x47, 0xbf, 0x5d, 0xc4, 0x00, 0xbe,
	0xfc, 0xb8, 0xba, 0xf8, 0x67, 0x18, 0xdd, 0x8d, 0x19, 0x03, 0xf9, 0x88, 0x99, 0xdc, 0x67, 0xb6,
	0x7c, 0x9a, 0x32, 0xf2, 0xf9, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x11, 0x50, 0xc8, 0xeb,
	0x02, 0x00, 0x00,
}
